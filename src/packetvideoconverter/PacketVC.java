/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packetvideoconverter;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import synchronizingdirectories.SynchronizingDirectories;


/**
 *
 * @author Icemen78
 */
public class PacketVC extends javax.swing.JFrame {
    private static final String version="024 beta";
    private static final long serialVersionUID = 4947219912291833695L;
    private final static int PVC_READY=0;
    private final static int PVC_BUSY=1;
    private final static int PVC_FINISHED=2;
    private int state = PVC_READY;
    private final File module;
    TreeMap<File,Long> files = new TreeMap<>();
    private Controller controller;
    private long preparedFilesSize=0;
    private final static String DEFAULT_EXTENSION=".ts";
    
    public PacketVC(String title) {
        super(title);
        initComponents();
        String arch = System.getenv("PROCESSOR_ARCHITECTURE");
        String wow64Arch = System.getenv("PROCESSOR_ARCHITEW6432");
        String realArch = ((arch!=null && arch.endsWith("64")) || (wow64Arch!=null && wow64Arch.endsWith("64"))) ? "64" : "32";
        this.setTitle(title+" ("+realArch+" bit)");
        String module_string = realArch.contains("64") ? "ffmpeg\\win64\\bin\\ffmpeg.exe" : "ffmpeg\\win32\\bin\\ffmpeg.exe";
//        JOptionPane.showMessageDialog(this, realArch + " : " + module_string);
        module = new File(module_string);
//        File dir=jFileChooser1.getCurrentDirectory();
        File defaultdir = new File("");
//        File defaultdir = new File("E:\\SHOS\\Video\\Test");
        jTextField1.setText(defaultdir.getAbsolutePath());
        String[] ext = new String[]{".ts",".mov",".mp4",".mpg",".mpeg",".m4v",".m2t",".mkv",".mxf",".mts"};
        for (Component comp : jPanel5.getComponents()) {
            if (comp instanceof javax.swing.JCheckBox) {
                javax.swing.JCheckBox cb = (javax.swing.JCheckBox)comp;
                cb.setSelected(false);
                String name = cb.getText();
                for (String item : ext) {
                    if (item.equals(name)) {
                        cb.setSelected(true);
                        break;
                    }
                }
            }
        }
        this.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent we) {
                    jButton3ActionPerformed(null);
                }
            });
        
        for (ParamFFMPEG.Resolution item:ParamFFMPEG.Resolution.values()) {
            jComboBox1.addItem(item);
        }
        jComboBox1.setSelectedItem(ParamFFMPEG.Resolution.valueOf(ParamFFMPEG.resDefault.name()));
        for (ParamFFMPEG.Frequency item:ParamFFMPEG.Frequency.values()) {
            jComboBox2.addItem(item);
        }
        jComboBox2.setSelectedItem(ParamFFMPEG.Frequency.valueOf(ParamFFMPEG.freqDefault.name()));
        for (ParamFFMPEG.Bitrate item:ParamFFMPEG.Bitrate.values()) {
            jComboBox3.addItem(item);
        }
        jComboBox3.setSelectedItem(ParamFFMPEG.Bitrate.valueOf(ParamFFMPEG.bitrateDefault.name()));
        jSlider1.setValue(Integer.parseInt(ParamFFMPEG.qualityDefault.getValue()));
        jButton4ActionPerformed(null);  //set defaults
        prepareDir(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<ParamFFMPEG.Resolution>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<ParamFFMPEG.Bitrate>();
        jComboBox2 = new javax.swing.JComboBox<ParamFFMPEG.Frequency>();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox14 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jCheckBox13 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MyJTextPane1 = new packetvideoconverter.MyJTextPane();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar2 = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();

        jFileChooser1.setDialogTitle("Specify file or directory");
        jFileChooser1.setFileFilter(null);
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Параметры"));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        jComboBox1.setFocusable(false);

        jLabel1.setText("Resolution");

        jLabel2.setText("Compressing");

        jSlider1.setMaximum(51);
        jSlider1.setMinimum(1);
        jSlider1.setFocusable(false);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jSlider1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jSlider1VetoableChange(evt);
            }
        });

        jLabel3.setText("Frequency");

        jLabel4.setText("Bitrate");

        jComboBox3.setFocusable(false);

        jComboBox2.setFocusable(false);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Val");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        jCheckBox14.setSelected(true);
        jCheckBox14.setText("Удалять видео менее 5 сек");
        jCheckBox14.setFocusable(false);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Keep source preference");
        jRadioButton1.setFocusable(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Advanced");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Reset to defaults");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox15.setSelected(true);
        jCheckBox15.setText("Прервать сжатие менее 10%");
        jCheckBox15.setFocusable(false);

        jCheckBox16.setText("расширить при необходимости");
        jCheckBox16.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addComponent(jRadioButton1))
                        .addGap(212, 212, 212)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox15)
                            .addComponent(jCheckBox14)
                            .addComponent(jCheckBox16))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox16)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jRadioButton2))
                        .addGap(18, 18, 18)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Источник данных"));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()), "Типы файлов"));

        jCheckBox1.setText(".ts");
        jCheckBox1.setFocusable(false);

        jCheckBox2.setText(".mov");
        jCheckBox2.setFocusable(false);

        jCheckBox3.setText(".mp4");
        jCheckBox3.setFocusable(false);

        jCheckBox5.setText(".mpg");
        jCheckBox5.setFocusable(false);

        jCheckBox4.setText(".mpeg");
        jCheckBox4.setFocusable(false);

        jCheckBox6.setText(".m4v");
        jCheckBox6.setFocusable(false);

        jCheckBox7.setText(".mkv");
        jCheckBox7.setFocusable(false);
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox10.setText(".avi");
        jCheckBox10.setFocusable(false);

        jCheckBox11.setText(".mxf");
        jCheckBox11.setToolTipText("");
        jCheckBox11.setFocusable(false);
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jCheckBox12.setText(".mts");
        jCheckBox12.setToolTipText("");
        jCheckBox12.setFocusable(false);
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jButton5.setText("Apply filter");
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jCheckBox13.setText(".m2t");
        jCheckBox13.setFocusable(false);
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox7, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox11, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox12, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextField1.setEditable(false);
        jTextField1.setForeground(new java.awt.Color(100, 100, 100));
        jTextField1.setText("<specify file or directory>");
        jTextField1.setFocusable(false);

        jButton1.setText("...");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Результат обработки"));

        MyJTextPane1.setEditable(false);
        MyJTextPane1.setText(""); // NOI18N
        MyJTextPane1.setToolTipText("");
        jScrollPane1.setViewportView(MyJTextPane1);

        jLabel5.setText("Current");

        jLabel6.setText("Total");

        jProgressBar1.setStringPainted(true);

        jProgressBar2.setMinimumSize(new java.awt.Dimension(10, 17));
        jProgressBar2.setStringPainted(true);

        jButton2.setText("Convert");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("use current dir");
        jCheckBox8.setFocusable(false);

        jCheckBox9.setText("to .mp4");
        jCheckBox9.setFocusable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox9)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox8)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox9)
                            .addComponent(jCheckBox8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap())
        );

        jLabel7.setForeground(new java.awt.Color(127, 127, 127));
        jLabel7.setText("ready");
        jLabel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Cancel button
        if(state==PVC_BUSY && JOptionPane.showConfirmDialog(this, "Прервать выполнение?","Предупреждение", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE)==JOptionPane.OK_OPTION) {
            controller.interrutp();
            try {
                while (controller.getState()==Controller.CLR_BUSY) {
                    Thread.sleep(100);
                }
            } catch (InterruptedException ex) {}
            System.exit(0);
        }else if (state!=PVC_BUSY) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Start convertation...
        switch (state) {
            case PVC_READY:
            try {
                preparedFilesSize=0;
                convert();
            }catch (Exception e) {
                MyJTextPane1.addRow(e.getMessage(),Color.red);
            }
            break;
            case PVC_BUSY:
            int retval = Controller.CLR_UNKNOWN;
            if (controller!=null) {retval = controller.getState();}
            if(JOptionPane.showConfirmDialog(this, "Прервать выполнение?","Предупреждение", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE)==JOptionPane.OK_OPTION) {
                jButton2.setEnabled(false);
                try {
                    controller.interrutp();
                    while (controller.getState()==Controller.CLR_BUSY) {
                        Thread.sleep(100);
                    }
                } catch (InterruptedException ex) {}
                state=PVC_FINISHED;
                setControlView();
            }
            break;
            case PVC_FINISHED:
            prepareDir(false);
            state=PVC_READY;
            setControlView();
            break;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jComboBox1.setSelectedItem(ParamFFMPEG.Resolution.valueOf(ParamFFMPEG.resDefault.name()));

        jComboBox1.setToolTipText(((ParamFFMPEG.Resolution)jComboBox1.getSelectedItem()).getValue());

        jComboBox2.setSelectedItem(ParamFFMPEG.Frequency.valueOf(ParamFFMPEG.freqDefault.name()));
        jComboBox2.setToolTipText(((ParamFFMPEG.Frequency)jComboBox2.getSelectedItem()).getValue());
        jComboBox3.setSelectedItem(ParamFFMPEG.Bitrate.valueOf(ParamFFMPEG.bitrateDefault.name()));
        jComboBox3.setToolTipText(((ParamFFMPEG.Bitrate)jComboBox3.getSelectedItem()).getValue());
        jSlider1.setValue(Integer.parseInt(ParamFFMPEG.qualityDefault.getValue()));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        setControlView();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        setControlView();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jSlider1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jSlider1VetoableChange

    }//GEN-LAST:event_jSlider1VetoableChange

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        jSlider1.setToolTipText(Integer.toString(jSlider1.getValue()));
        jLabel8.setText(Integer.toString(jSlider1.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //prepateDir with Open File chooser
        prepareDir(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Update file list with new filefilter
        prepareDir(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                /*  Set the Metall look and feel and localization JFileChooser */
                /*  If Metall is not available, stay with the default look and feel.*/
                try {
//                    javax.swing.plaf.metal.MetalLookAndFeel
//                    javax.swing.plaf.nimbus.NimbusLookAndFeel
//                    com.sun.java.swing.plaf.motif.MotifLookAndFeel
//                    com.sun.java.swing.plaf.windows.WindowsLookAndFeel
//                    com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel
                    UIManager.setLookAndFeel(new javax.swing.plaf.metal.MetalLookAndFeel());
                    SynchronizingDirectories.JFileChooser_locate();
                    
                } catch (Exception e) {}
                new PacketVC("Пакетный видеоконвертер (v. "+version+")").setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private packetvideoconverter.MyJTextPane MyJTextPane1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox<ParamFFMPEG.Resolution> jComboBox1;
    private javax.swing.JComboBox<ParamFFMPEG.Frequency> jComboBox2;
    private javax.swing.JComboBox<ParamFFMPEG.Bitrate> jComboBox3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    private void prepareDir(boolean withFileChooser) {
        String sequence="";
        javax.swing.JCheckBox cb_default=null;
        boolean blnCancel=false;
        for (Component comp : jPanel5.getComponents()) {
            if (comp instanceof javax.swing.JCheckBox) {
                javax.swing.JCheckBox cb = (javax.swing.JCheckBox)comp;
                if (cb.getText()==DEFAULT_EXTENSION){cb_default=cb;}
                if (cb.isSelected()) {
                    sequence += (sequence.length()>0?","+cb.getText():cb.getText());
                }
            }
        }
        if (sequence.length()==0) {
            sequence=DEFAULT_EXTENSION;
            cb_default.setSelected(true);
        }
        String[] ext=sequence.split(",");
        FileExtentionFilter fef = new FileExtentionFilter(ext);
        File dir = new File(jTextField1.getText());
        if (!dir.getParentFile().exists() || withFileChooser) {
            jFileChooser1.setCurrentDirectory(new File(jTextField1.getText()).getParentFile());
            jFileChooser1.setFileFilter(fef);          
            if (jFileChooser1.showDialog(null, null)  == JFileChooser.APPROVE_OPTION) {
                jTextField1.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
                dir = new File(jTextField1.getText());
            }else {
                blnCancel=true;
            }
        }
        if (!blnCancel) {
            ArrayList<Exception> exceptions = new ArrayList<>();
            files = getFList(dir, new FileExtentionFilter(ext), exceptions);
            //Обновление информации на форме
            MyJTextPane1.setText("");
            if (files.size()>0 || !exceptions.isEmpty()) {
                int count=0;
                TreeSet<File> file_list = new TreeSet<>(files.keySet());
                for (File file : file_list) {
//                for (File file : new TreeSet<>(files.keySet())) {
                    count++;
                    MyJTextPane1.addRow(count+": "+file.getAbsolutePath());
                }
                count=0;
                if (!exceptions.isEmpty()) {
                    count++;
                    for (Exception e:exceptions) {
                        MyJTextPane1.addRow(count+": "+e.getMessage(),Color.red);
                    }
                }

            }else {
                MyJTextPane1.addRow("Нет файлов для обработки",Color.red);
            }
            this.state = PacketVC.PVC_READY;
            setControlView();
        }
    }
    private TreeMap<File,Long> getFList(File fobject, FileExtentionFilter ff, ArrayList<Exception> exeptions) {
        TreeMap<File,Long> retval = new TreeMap<>();
        if (fobject.isDirectory()) {
            try {
                for (File f:fobject.listFiles(ff)) {
                    retval.putAll(getFList(f,ff,exeptions));
                }
            }catch (Exception e){
                exeptions.add(new Exception("File is directory but resieve null by listFiles...: "+fobject.getAbsolutePath()));
            }
        }else {
            File file=Converter.fixFilename(fobject);
            long length=file.length();
//            if (file.exists() && length>0) {
            if (file.exists()) {
                retval.put(file, length);
            }
        }            
        return retval;
    }    

    private void setControlView() {
        switch (state) {
            case PVC_READY:
                jButton2.setText("Convert");
                jButton2.setEnabled(files.size()>0);
                break;
            case PVC_BUSY:
                jButton2.setText("Break");
                jButton2.setEnabled(true);
                break;
            case PVC_FINISHED:
                jButton2.setText("Retry");
                jButton2.setEnabled(true);
                break;
        }
        jButton1.setEnabled(state!=PVC_BUSY);
        jButton4.setEnabled(!jRadioButton1.isSelected());
        for (Component component:jPanel1.getComponents()) {
            component.setEnabled(!jRadioButton1.isSelected());
        }        
        for (Component component:jPanel5.getComponents()) {
            component.setEnabled(state!=PVC_BUSY);
        }
        if (state!=PVC_BUSY) {
            jProgressBar1.setValue(0);
            jProgressBar2.setValue(0); 
        }
    }
    
    private void convert() throws Exception{
        state = PVC_BUSY;
        setControlView();
        controller = new Controller(files, module, prepareParam(),jCheckBox8.isSelected());
        controller.addListener(new ControllerListener() {
            @Override
            public void progressed(ParamFFMPEG.Frame current) {
                hasProgressed(current);
            }
            @Override
            public void progressedTotal(Converter current) {
                hasProgressedTotal(current);
            }
            @Override
            public void finished() {
                hasFinished();
            }
            @Override
            public void logging(String msg, boolean important) {
                hasLogging(msg,important);
            }
        });
        controller.start();
    }
    private ParamFFMPEG prepareParam() {
        ParamFFMPEG param = new ParamFFMPEG();
        if (!jRadioButton1.isSelected()) {
            param.setResolution(((ParamFFMPEG.Resolution)jComboBox1.getSelectedItem()).getValue());
            param.setQuality(Integer.toString(jSlider1.getValue()));
            param.setFrequency(((ParamFFMPEG.Frequency)jComboBox2.getSelectedItem()).getValue());
            param.setBitrate(((ParamFFMPEG.Bitrate)jComboBox3.getSelectedItem()).getValue());
        }
        param.setFormat(jCheckBox9.isSelected()?ParamFFMPEG.FormatOUT.mp4.getValue():ParamFFMPEG.FormatOUT.avi.getValue());
        param.setDeletingTrashFile(jCheckBox14.isSelected());
        param.setSkipBadCompression(jCheckBox15.isSelected());
        param.setTryToFullWidth(jCheckBox16.isSelected());
        //Если умолчания, то param = new ParamFFMPEG(true);
        //Если все параметры собственные, то param = new ParamFFMPEG(p1,p2,p3,p4,p5,p6);
        //Если некоторые (или все) параметры из файла, то param = new ParamFFMPEG(); далее set p1,p3...
        return param;
    }
    
    private void hasProgressed(ParamFFMPEG.Frame current){
        double percent = current.getPercent()*10000;
        percent=Math.round(percent);
        percent=(percent/100);
        jProgressBar1.setValue((int)percent);
        jLabel7.setText(current.toString());
    }
    private void hasProgressedTotal(Converter c){
//        if (c.getCompression().length()>0){System.out.println("Сжатие файла: "+c.getCompression());}
        preparedFilesSize+=c.getFileSise();
        double current=(double)preparedFilesSize;
        double total=(double)controller.getTotalFSize();
        double percent=Math.round((current/total*10000));
        percent=(percent/100);
        jProgressBar2.setValue((int)percent);
    }
    private void hasFinished(){
        MyJTextPane1.addRow("... конвертирование завершено. Преобразовано файлов "+controller.getConverdedFiles().size() + " из "+controller.getFiles().size());
        jLabel7.setText("ready");
        state = PVC_FINISHED;
        setControlView();
    }
    private void hasLogging(String msg, boolean important) {
//        System.out.println("******");
//        System.out.println(msg);
//        System.out.println("******");
        MyJTextPane1.addRow(msg,important?Color.red:Color.black);
    }
}
